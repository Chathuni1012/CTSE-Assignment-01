name: CI/CD Pipeline with SonarCloud and Docker

on:
  push:
    branches:
      - inventory-service  
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      with:
          fetch-depth: 0

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'zulu'

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: SonarCloud analysis
      working-directory: inventory-service
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -f inventory-service/pom.xml -Dsonar.projectKey=Chathuni1012_CTSE-Assignment-01
  
  
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: sonarcloud-analysis

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.INVENTORYDOCKERUSERNAME }}
        password: ${{ secrets.INVENTORYDOCKERPASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.INVENTORYDOCKERUSERNAME }}/inventory-service:latest
